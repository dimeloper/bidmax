<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">


	<global-method-security pre-post-annotations="enabled"/>
	
	<http use-expressions="true">
		<intercept-url pattern="/admin/users**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		
		<intercept-url pattern="/account**" access="hasRole('ROLE_USER')" />

		<form-login login-page="/admin.html" 
authentication-failure-url="/admin.html?error=true" 
default-target-url="/admin/users.html"
always-use-default-target="true"  />
		<logout logout-url="/logout" />
	</http>



	<authentication-manager>
		<authentication-provider>
		
			
			<!-- <user-service> -->
			<!-- <user name="admin" password="admin" authorities="ROLE_USER, ROLE_ADMIN" 
				/> -->
			<!-- </user-service> -->
			
			<password-encoder hash="bcrypt" />
			
			<jdbc-user-service data-source-ref="dataSource"
				authorities-by-username-query="select bm_user.name, role.name from bm_user
												join bm_user_role on bm_user.id=bm_user_role.users_id
												join role on bm_user_role.roles_id = role.id
												where bm_user.name = ?"
				users-by-username-query="select name, password, enabled from bm_user where name=?" />

		</authentication-provider>
	</authentication-manager>

</beans:beans>

